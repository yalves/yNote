@model YanAlves.yNote.Application.ViewModels.TarefaViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>TarefaViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TarefaId)
        @Html.HiddenFor(model => model.UsuarioId)
        @Html.HiddenFor(model => model.DataDeCriacao)

        <div class="form-group">
            @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Conteudo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Conteudo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Conteudo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TagIds, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="tag-select form-control" name="TagIds" multiple="multiple">
                    @foreach (var tag in ViewBag.TodasAsTags)
                    {
                        if (Model.TagIds.Contains(tag.TagId))
                        {
                            <option value="@tag.TagId" selected>@tag.Titulo</option>
                        }
                        else
                        {
                            <option value="@tag.TagId">@tag.Titulo</option>
                        }
                    }
                </select>
                <br />
                @Html.ValidationMessageFor(model => model.TagIds, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Prazo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Prazo, new { htmlAttributes = new { @class = "form-control", type = "Date", value = Model.Prazo } })
                @Html.ValidationMessageFor(model => model.Prazo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoriaId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("CategoriaId", null, "Escolha uma Categoria", new { @class = "form-control" })*@
                <select class="form-control" name="CategoriaId">
                    @foreach (var Categoria in ViewBag.CategoriaId)
                    {
                        if (Model.CategoriaId.ToString() == Categoria.Value)
                        {
                            <option value="@Categoria.Value" selected>@Categoria.Text</option>
                        }
                        else
                        {
                            <option value="@Categoria.Value">@Categoria.Text</option>
                        }                        
                    }
                </select>
                @Html.ValidationMessageFor(model => model.CategoriaId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script type="text/javascript">
    $(".tag-select").select2({ dropdownAutoWidth: 'true' });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
